# Generated by Django 4.2.21 on 2025-06-04 20:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stock', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packing_type', models.CharField(help_text='e.g., Bottle, Box, Carton, PET Jar', max_length=100)),
                ('quantity_in_packing', models.DecimalField(decimal_places=2, help_text='e.g., 1 (for 1 liter bottle), 0.5 (for 500ml), 12 (for a dozen items)', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('unit_of_measure', models.CharField(help_text='e.g., kg, liter, pieces, meters', max_length=50)),
                ('items_per_master_unit', models.PositiveIntegerField(help_text='e.g., Number of bottles per PET/Carton, or items per box.', validators=[django.core.validators.MinValueValidator(1)])),
                ('price_per_item', models.DecimalField(decimal_places=2, help_text='Price for one individual item (e.g., one bottle, one piece).', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='stock.addproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_details_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Detail/Variant',
                'verbose_name_plural': 'Product Details/Variants',
                'ordering': ['product_base__name', '-created_at'],
                'unique_together': {('product_base', 'packing_type', 'quantity_in_packing', 'unit_of_measure')},
            },
        ),
    ]

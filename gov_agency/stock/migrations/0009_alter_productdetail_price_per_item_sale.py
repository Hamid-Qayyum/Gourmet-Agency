# Generated by Django 4.2.21 on 2025-06-13 14:48

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stock', '0008_alter_productdetail_expirey_date_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='productdetail',
            name='price_per_item',
            field=models.DecimalField(decimal_places=2, help_text='Price for one individual item (e.g., one bottle, one piece).', max_digits=10, validators=[django.core.validators.MinValueValidator(0.1)]),
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_customer', models.CharField(max_length=100)),
                ('expiry_date_at_sale', models.DateField(help_text='Expiry date of the product batch at the time of sale.')),
                ('stock_before_sale', models.DecimalField(decimal_places=1, help_text='Stock level of the product_detail (in master units) just before this sale transaction.', max_digits=10)),
                ('items_per_master_unit_at_sale', models.PositiveIntegerField(help_text='Items per master unit for the sold product batch at the time of sale.')),
                ('cost_price_per_item_at_sale', models.DecimalField(decimal_places=2, help_text='Your cost for one individual item of this product at the time of sale.', max_digits=10)),
                ('quantity_items_sold', models.PositiveIntegerField(help_text='Number of individual items sold (e.g., bottles, not master units like cartons).', validators=[django.core.validators.MinValueValidator(1)])),
                ('selling_price_per_item', models.DecimalField(decimal_places=2, help_text='The price each individual item was sold to the customer for.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('sale_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('product_detail_snapshot', models.ForeignKey(help_text='The specific product detail (batch) that was sold.', on_delete=django.db.models.deletion.PROTECT, related_name='sales_records', to='stock.productdetail')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sale Record',
                'verbose_name_plural': 'Sale Records',
                'ordering': ['-sale_time'],
            },
        ),
    ]
